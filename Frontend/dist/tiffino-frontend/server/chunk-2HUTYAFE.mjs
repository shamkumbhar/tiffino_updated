import './polyfills.server.mjs';
import{c as u}from"./chunk-EOLPFJSD.mjs";import{$b as l,H as o,K as c,P as i,f as n}from"./chunk-D4DS7FIH.mjs";var s=class{};var a="user",j=(()=>{class r{constructor(t,e){this.http=t,this.router=e,this.userSubject=new n(this.getUserFromLocalStorage()),this.userObservable=this.userSubject.asObservable()}get currentUser(){return this.userSubject.value}register(t){return this.http.post("/users/",t).pipe(o({next:e=>{e.isAdmin=e.role==="ADMIN",this.setUserToLocalStorage(e),this.userSubject.next(e),console.log(`User registered successfully: ${e.id}`)},error:e=>{e.error instanceof ProgressEvent?console.error("Registration failed: Backend unreachable or network error",e):console.error("Registration failed:",e.error)}}))}login(t){return this.http.post("/users/login",t).pipe(o({next:e=>{localStorage.setItem("UserData",JSON.stringify(e)),this.currentiser=e,this.setUserToLocalStorage(e),this.userSubject.next(e)},error:e=>{console.log(e.error,"Login Failed")}}))}checkEmailExists(t){return this.http.get(`/api/users/email-exists?email=${t}`)}getUserFromLocalStorage(){let t=localStorage.getItem(a);return t?JSON.parse(t):new s}setUserToLocalStorage(t){localStorage.setItem(a,JSON.stringify(t))}logout(){this.userSubject.next(new s),localStorage.removeItem(a),console.log("User has logged out successfully.")}changePassword(t){let g={Authorization:`Bearer ${localStorage.getItem("token")}`};return this.http.post("/api/users/{id}/change-password",t,{headers:g})}get currentUserValue(){if(!this.currentiser){let t=localStorage.getItem("user");t&&(this.currentiser=JSON.parse(t))}return this.currentUser}static{this.\u0275fac=function(e){return new(e||r)(i(l),i(u))}}static{this.\u0275prov=c({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();export{j as a};
